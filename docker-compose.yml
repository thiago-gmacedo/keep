services:
  # Servidor Web API (para WhatsApp bot)
  web_server:
    build: 
      context: .
      dockerfile: Dockerfile.python
    container_name: keep-web-server
    ports:
      - "8000:8000"
    volumes:
      - ./vault/chroma_db:/app/vault/chroma_db
      - ./logs:/app/logs
      - ./.env:/app/.env
    environment:
      - PYTHONPATH=/app
    restart: unless-stopped
    command: python src/web_server.py

  # Pipeline Principal (substitui run_loop.sh)
  pipeline_scheduler:
    build: 
      context: .
      dockerfile: Dockerfile.python
    container_name: keep-pipeline-scheduler
    volumes:
      - ./chroma_db:/app/chroma_db
      - ./images:/app/images
      - ./logs:/app/logs
      - ./.env:/app/.env
    environment:
      - PYTHONPATH=/app
    restart: unless-stopped
    command: python src/scheduler.py

  # Bot WhatsApp
  wa_bot:
    build: ./wa_bot
    container_name: keep-whatsapp-bot
    depends_on:
      - web_server
    volumes:
      - wa_bot_sessions:/app/wa_bot/sessions
      - ./logs:/app/wa_bot/logs  # Adicione este volume para logs
    environment:
      - PIPELINE_URL=http://web_server:8000
      - NODE_OPTIONS=--max_old_space_size=512  # Limitar uso de mem√≥ria
      - PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser
      - PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    restart: unless-stopped
    stdin_open: true
    tty: true
    deploy:
      resources:
        limits:
          memory: 1G        # Limitar a 1GB de RAM
          cpus: '0.5'       # Limitar a 50% da CPU
    healthcheck:            # Adicionar healthcheck
      test: ["CMD", "node", "-e", "console.log('healthcheck')"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  wa_bot_sessions:

networks:
  default:
    name: keep-network
